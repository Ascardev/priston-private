#ifndef	_SMPACKET_HEADER

#define _SMPACKET_HEADER

#include	"sinbaram\\sinitem.h"
#include	<atltime.h>

#define	smTRANSCODE_OPENLIVE				0x38000000

#define	smTRANSCODE_SYSTEM					0x48400000

#define	smTRANSCODE_CONNECTED				0x48470080
#define smTRANSCODE_RECORDDATA				0x48470081
#define smTRANSCODE_GETRECORDDATA			0x48470082
#define smTRANSCODE_FAILRECORDDATA			0x48470083
#define smTRANSCODE_RECORDRESULT			0x48470084

#define smTRANSCODE_ID_SETUSERINFO			0x48470086
#define smTRANSCODE_ISRECORDDATA			0x48470089

#define smTRANSCODE_VERSION					0x4847008A
#define smTRANSCODE_CHECK_NETSTATE			0x4847008B
#define smTRANSCODE_ADMINMODE				0x4847008C
#define smTRANSCODE_SET_OBJSERIAL			0x4847008D
#define smTRANSCODE_CHECK_NETSTATE2			0x4847008E
#define smTRANSCODE_CHECK_NETSTATE3			0x4847008F
#define smTRANSCODE_CHECK_NETSTATE4			0x48470090
#define smTRANSCODE_CHECK_NETSTATE5			0x48470091
#define smTRANSCODE_IPLIST					0x48471000
#define smTRANSCODE_CHATMESSAGE				0x48471001
#define smTRANSCODE_POSITION				0x48471002
#define smTRANSCODE_PLAYLIST				0x48471003
#define smTRANSCODE_CONTINUEDATA			0x48471004
#define smTRANSCODE_WHISPERMESSAGE			0x48471005
#define smTRANSCODE_COUPLERING				0x48471006
#define smTRANSCODE_DISPLAYDAMGE			0x48471007
#define smTRANSCODE_PLAYDATA1				0x48470010
#define smTRANSCODE_PLAYDATA2				0x48470011
#define smTRANSCODE_PLAYDATA3				0x48470012
#define smTRANSCODE_TRANSPLAYDATA			0x48470013
#define smTRANSCODE_PLAYDATAGROUP			0x48470014
#define smTRANSCODE_PLAY_COMMAND			0x48470018
#define smTRANSCODE_PARTY_CHATMSG			0x48471015
#define smTRANSCODE_ADDEXP_PARTY			0x48470029
#define smTRANSCODE_ATTACKDATA				0x48470030
#define smTRANSCODE_ADDEXP					0x48470031
#define smTRANSCODE_PLAYERINFO2				0x48470032
#define smTRANSCODE_SET_BLACKLIST			0x48470033
#define smTRANSCODE_SET_ITEMCOPYLIST		0x48470034
#define smTRANSCODE_SKIL_ATTACKDATA			0x48470035
#define smTRANSCODE_FINDCRACK				0x48470036
#define smTRANSCODE_MODULE_WARNIG			0x48470037
#define smTRANSCODE_UPDATE_CINFO			0x48470038
#define smTRANSCODE_OPENMONSTER				0x48470039
#define smTRANSCODE_WARPFIELD				0x48470040
#define smTRANSCODE_TRADEITEMS				0x48470041
#define smTRANSCODE_TRADE_REQUST			0x48470042
#define smTRANSCODE_TRADE_ITEMKEY			0x48470043
#define smTRANSCODE_TRADE_READYITEM			0x48470044
#define smTRANSCODE_SKILL_MENU				0x48470045
#define smTRANSCODE_FINDCRACK2				0x48470046
#define smTRANSCODE_WAREHOUSE				0x48470047
#define smTRANSCODE_OPEN_WAREHOUSE			0x48470048
#define smTRANSCODE_OPEN_MIXITEM			0x48470049
#define smTRANSCODE_OPEN_COLLECT			0x4847004A
#define smTRANSCODE_COLLECTMONEY			0x4847004B
#define	smTRANSCODE_PLAYERINFO_Q			0x4847004C
#define smTRANSCODE_OPEN_AGING				0x4847004D
#define smTRANSCODE_SKIL_ATTACKUSER			0x4847004E
#define smTRANSCODE_OPEN_EVENTGIFT			0x4847004F
#define smTRANSCODE_PLAYERINFO				0x48470020
#define smTRANSCODE_GETPLAYERINFO			0x48470021
#define smTRANSCODE_FAILCONNECT				0x48470023
#define smTRANSCODE_OPEN_SOCKET				0x48470024
#define smTRANSCODE_PLAYITEM				0x48470050
#define smTRANSCODE_DELITEM					0x48470051
#define smTRANSCODE_PUTITEM					0x48470052
#define smTRANSCODE_THROWITEM				0x48470053
#define smTRANSCODE_SHOP_ITEMLIST			0x48470054
#define smTRANSCODE_SAVETHROWITEM			0x48470055
#define smTRANSCODE_SAVETHROWMONEY			0x48470056
#define smTRANSCODE_SAVETHROWITEM2			0x48470057
#define smTRANSCODE_SAVETHROWITEMS			0x48470058
#define smTRANSCODE_PLAYERKILLING			0x48470059
#define smTRANSCODE_GETITEM					0x4847005A
#define smTRANSCODE_USEITEM_CODE			0x4847005B
#define smTRANSCODE_COMMAND_USER			0x4847005C
#define smTRANSCODE_WING_NPC				0x4847005D
#define smTRANSCODE_PAYMENT_MONEY			0x4847005E
#define smTRANSCODE_MEDIA_NPC				0x4847005F
#define smTRANSCODE_ADD_STARTPOSI			0x48470060
#define smTRANSCODE_DEL_STARTPOSI			0x48470061
#define smTRANSCODE_ADMIN_COPYCHAR			0x48470062
#define smTRANSCODE_ADD_NPC					0x48470070
#define smTRANSCODE_DEL_NPC					0x48470071
#define smTRANSOCDE_SET_EXPUP				0x48470072
#define smTRANSOCDE_SET_PLAYINFO_EXP		0x48470073
#define smTRANSOCDE_SET_PLAYSIZE			0x48470074
#define	smTRANSCODE_PARTY_UPDATE			0x484700A0
#define	smTRANSCODE_PARTY_REQUEST			0x484700A1
#define	smTRANSCODE_PARTY_JOIN				0x484700A2
#define	smTRANSCODE_PARTY_PLAYUPDATE		0x484700A3
#define	smTRANSCODE_PARTY_RELEASE			0x484700A4
#define	smTRANSCODE_PARTY_COMMAND			0x484700A5
#define smTRANSCODE_OPEN_MIXTURE_RESET		0x484700A6
#define smTRANSCODE_OPEN_ELEMENT			0x484700A9
#define smTRANSCODE_OPEN_CARAVAN			0x484700AA
#define smTRANSCODE_CARAVAN					0x484700AB
#define smTRANSCODE_PCBANG_PET				0x484700B0
#define smTRANSCODE_PHENIX_PET				0x484700B1
#define smTRANSCODE_HELP_PET				0x484700B2
#define smTRANSCODE_FRUIT					0x484700B3
#define smTRANSCODE_CANCEL_BIGHEAD			0x484700B4
#define smTRANSCODE_FORCE_ROE				0x484700B5
#define smTRANSCODE_CANCEL_FORCE			0x484700B6
#define smTRANSCODE_WAREHOUSEMONEY			0x484700B7
#define smTRANSCODE_CHANGEJOBLEVEL			0x484700B8
#define smTRANSCODE_MAPLEVEL				0x484700B9
#define smTRANSCODE_CANCEL_CARAVAN			0x484700BA
#define	smTRANSCODE_SERVER_INFO				0x484700C0
#define	smTRANSCODE_PARTY_POTION			0x484700D0
#define	smTRANSCODE_HEALING					0x484700D2
#define	smTRANSCODE_HOLYMIND				0x484700D3
#define	smTRANSCODE_GRAND_HEALING			0x484700D4
#define	smTRANSCODE_VAMPRIC_CUSPID			0x484700D6
#define	smTRANSCODE_VAMPRIC_CUSPID_EX		0x484700D7
#define	smTRANSCODE_MANA_RECHARGING			0x484700D8
#define	smTRANSCODE_RECORD_TRADE			0x48480010
#define smTRANSCODE_NETWORK_QUALITY			0x484700E0
#define smTRANSCODE_PROCESSINFO				0x484700E4
#define	smTRANSCODE_CLOSECLIENT				0x484700E6
#define smTRANSCODE_CHECKIP					0x484700E7
#define	smTRANSCODE_SAVECLIENT				0x484700E8
#define smTRANSCODE_EFFECT_ITEM				0x48478000
#define smTRANSCODE_EFFECT_ELEMENT			0x48478001
#define smTRANSCODE_EFFECT_WEAPON			0x48478002
#define smTRANSCODE_EFFECT_STUN				0x48478004
#define smTRANSCODE_EFFECT_CURSE			0x48478006
#define smTRANSCODE_EFFECT_ICE				0x48478008
#define smTRANSCODE_EFFECT_POISION			0x4847800A
#define smTRANSCODE_EFFECT_FIRE				0x4847800B
#define smTRANSCODE_EFFECT_VANISH			0x4847800C
#define smTRANSCODE_EFFECT_PERSHOP			0x4847800E
#define smTRANSCODE_EFFECT_LOWPET			0x4847800F
#define smTRANSCODE_EFFECT_CLANMGR			0x48479000
#define smTRANSCODE_EFFECT_FORCEORB			0x48479010
#define smTRANSCODE_EFFECT_CURSE_QUEST		0x48479011
#define smTRANSCODE_EFFECT_BLESS_SCORE		0x48479012
#define smTRANSCODE_EFFECT_KEEPSKILL		0x48479020
#define smTRANSCODE_EFFECT_VIPER			0x48479030
#define smTRANSCODE_EFFECT_WING				0x48479040
#define smTRANSCODE_EFFECT_LEVEL			0x48479050
#define smTRANSCODE_CONT_OBJSERIAL			0x48478010
#define smTRANSCODE_MESSAGEBOX				0x48478100
#define	smTRANSCODE_FUNCERROR				0x48478200
#define smTRANSCODE_FUNCTION_MEM2			0x48478300
#define	smTRANSCODE_SET_BLACKLIST2			0x48478400
#define smTRANSCODE_SET_BLACKLIST3			0x48478500
#define	smTRANSCODE_BAD_PLAYER				0x48478600
#define	smTRANSCODE_FIX_ATTACK				0x48478700
#define	smTRANSCODE_DEAD_PLAYER				0x48478800
#define smTRANSCODE_CLIENT_ERROR			0x48478900
#define	smTRANSCODE_INVEN_ERR_ITEM			0x48478910
#define	smTRANSCODE_INVEN_ERR_MONEY			0x48478920
#define	smTRANSCODE_INVEN_POSITION			0x48478930
#define	smTRANSCODE_INVEN_POSITION2			0x48478931
#define smTRANSCODE_ENCODE_PACKET			0x80010000
#define smTRANSCODE_ENCODE_PACKET2			0x90010000
#define smTRANSCODE_OPEN_CLANMENU			0x48478A00
#define smTRANSCODE_OPEN_STARPOINT			0x48478A10
#define smTRANSCODE_STARPOINT				0x48478A12
#define smTRANSCODE_OPEN_GIVEMONEY			0x48478A14
#define smTRANSCODE_GIVEMONEY				0x48478A16
#define smTRANSCODE_CLANMONEY				0x48478A18
#define smTRANSCODE_ITEM_EXPRESS			0x48478A80
#define smTRANSCODE_OPEN_MYSHOP				0x48478A90
#define smTRANSCODE_CALL_MYSHOP				0x48478AA0
#define	smTRANSCODE_MYSHOP_ITEM				0x48478AB0
#define	smTRANSCODE_MYSHOP_MESSAGE			0x48478AC0
#define	smTRANSCODE_MYSHOP_TRADE			0x48478AD0
#define smTRANSCODE_EFFECT_PCBANGPET		0x48478AE0
#define smTRANSCODE_ADMINMODE2				0x5047108C
#define smTRANSCODE_CHECK_NETSTATE20		0x5047008E
#define smTRANSCODE_CHECK_EXPMONEY			0x50320010
#define smTRANSCODE_FORCEORB_DATA			0x50320030
#define smTRANSCODE_PRIMEITEM_DATA			0x50320031
#define smTRANSCODE_PRIMEITEM_DATA2			0x50320032
#define smTRANSCODE_PRIMEITEM_DATA3			0x50320033
#define smTRANSCODE_PRIMEITEM_DATA4			0x50320036
#define smTRANSCODE_BOOSTER_DATA			0x50320034
#define smTRANSCODE_AGING_DATA				0x50320035
#define smTRANSCODE_SKILLDELAY_DATA			0x50320036
#define smTRANSCODE_SEND_DATASERVER			0x50320100
#define smTRANSCODE_SEND_GAMESERVER			0x50320110
#define smTRANSCODE_SEND_AREASERVER			0x50320120
#define smTRANSCODE_SEND_AGAME_SERVER		0x50320130

#define smTRANSCODE_SEND_AGAME_PRIMEITEM_DATA2	0x50320140
#define smTRANSCODE_SEND_AGAME_PRIMEITEM_DATA3	0x50320150
#define smTRANSCODE_SEND_AGAME_PRIMEITEM_DATA4	0x50320160


#define smTRANSCODE_CRAFTITEM				0x50320200
// 锻造物品协议
#define smTRANSCODE_AGINGITEM				0x50320202
#define	smTRANSCODE_AGING_UPGRADE			0x50320204
#define	smTRANSCODE_MAKE_LINKCORE			0x50320205
#define	smTRANSCODE_USE_LINKCORE			0x50320206
#define smTRANSCODE_WINGITEM				0x50320208
#define smTRANSCODE_SHOPTITEM				0x50320210
#define smTRANSCODE_SHOP_SELLITEM			0x50320212
#define	smTRANSCODE_ITEM_FORCEORB			0x50320214
#define smTRANSCODE_ELEMENTITEM				0x50320216
#define smTRANSCODE_SOCKETITEM				0x50320217	
#define	smTRANSCODE_QUEST_COMMAND			0x50320220
#define smTRANSCODE_CHECKITEM				0x50320300
#define smTRANSCODE_ERRORITEM				0x50320310
#define smTRANSCODE_CLEARPOTION				0x50320320

#ifdef _CHECK_MESH
#define smTRANSCODE_CHECK_ITEMMESH			0x50320330
#endif

#define smTRANSCODE_CLIENT_FUNCPOS			0x50320400
#define smTRANSCODE_GETCLIENT_FUNCPOS		0x50320410
#define smTRANSCODE_FUNCTION_MEM			0x50320420
#define smTRANSCODE_FUNCTON_RESULT			0x50320430
#define smTRANSCODE_PROCESS_TIMEMAX			0x50320500
#define smTRANSCODE_NSPRITE					0x50320600
#define smTRANSCODE_NPROTECT				0x50320700
#define smTRANSCODE_GAMEGUARD_AUTH			0x50320710
#define	smTRANSCODE_REC_DAMAGEDATA			0x50320800

#define	smTRANSCODE_SOD_RESULT				0x50320900
#define	smTRANSCODE_SOD_RESULT2				0x50320901

#define	smTRANSCODE_PARTY_SKILL				0x50320A00

#define	smTRANSCODE_CANCEL_SKILL			0x50320A10
#define	smTRANSCODE_PROCESS_SKILL			0x50320A20
#define smTRANSCODE_PROCESS_SKILL2			0x50320A30
#define smTRANSCODE_PROCESS_CLAN_SKILL		0x50320A35
#define	smTRANSCODE_UPDATEL_SKILL			0x50320A40
#define	smTRANSCODE_SUCCESS_EVATION			0x50320A50
#define	smTRANSCODE_RESISTANCE				0x50320A60
#define	smTRANSCODE_PUBLIC_POLLING			0x50320A70
#define	smTRANSCODE_NOTICE_BOX				0x50320A80
#define	smTRANSCODE_HACKTRAP				0x50320A90

#define	smTRANSCODE_VIRTURAL_POTION			0x50320B00
#define	smTRANSCODE_CLAN_SERVICE			0x50320C00
#define	smTRANSCODE_CLAN_UPDATE				0x50320C10
#define	smTRANSCODE_QUEST_MESSAGE			0x50320D00
#define	smTRANSCODE_DEAD_USER				0x50320E00
#define	smTRANSCODE_DEAD_EXP				0x50320E02
#define	smTRANSCODE_YAHOO_MOTION			0x50320E10
#define	smTRANSCODE_CHANGE_EVENT			0x50320F00
#define	smTRANSCODE_CLIENTINFO				0x50321000
#define	smTRANSCODE_WARNING_BLINK_ATT		0x50321010
#define smTRANSCODE_ATTACK_DAMAGE			0x50322000
#define smTRANSCODE_RANGE_DAMAGE			0x50322010
#define smTRANSCODE_ATTACK_RESULT			0x50322020
#define smTRANSCODE_DISP_DAMAGE				0x50322030
#define smTRANSCODE_ATTACKDATA2				0x50322040
#define smTRANSCODE_LIMIT_DAMAGE			0x50322050
#define smTRANSCODE_WARNING_CLIENT			0x50322060
#define smTRANSCODE_WARNING_SKILL			0x50322080
#define smTRANSCODE_COMIC_SKIN				0x50322070
#define	smTRANSCODE_REC_ADMIN_COMMAND		0x50322090
#define smTRANSCODE_CHECK_ADMINMODE			0x503220A0
#define smTRANSCODE_SOD_INFOMATION			0x503220B0
#define smTRANSCODE_BLESSCASTLE_INFO		0x503220C0
#define smTRANSCODE_BLESSCASTLE_TAX			0x503220D0
#define smTRANSCODE_ATTACK_SLASH_LIST		0x503220E0
#define smTRANSCODE_UPDATE_SERVER_PARAM		0x503220F0
#define smUPDATE_PARAM_LOWUSER_PRESENT		0x100
#define smTRANSCODE_USER_ID					0x50322100
#define smTRANSCODE_DAMAGE_ENCODE_MEM		0x50322F00
#define smTRANSCODE_DAMAGE_ENCODE_MEM2		0x50322EC0
#define	smTRANSCODE_PACKET_DYNFUNC			0x50323000
#define	smTRANSCODE_AREA_SERVER_MAP			0x50324000
#define smTRANSCODE_OPEN_SMELTING			0x50325000
#define smTRANSCODE_SMELTINGITEM			0x50325001
#define smTRANSCODE_OPEN_MANUFACTURE		0x50326000
#define smTRANSCODE_MANUFACTURE				0x50326001
#define smTRANSCODE_MANUFACTURE_WEIGHT_PRICE 0x50326002
#define smTRANSCODE_GIFTBOX_MONEY			0x50326003
#define smTRANSCODE_PREMIUMITEM_INIT		0x50326004
#define smTRANSCODE_MIXTURE_RESET_ITEM		0x50326006
#define smTRANSCODE_PLAYER_DATA_VIP			0x50326009
#define smTRANSCODE_PLAYER_GAME_VIP			0x50326010

// 怪物水晶协议 取消水晶协议
#define smTRANSCODE_CRYSTAL_ORB				0x50326011
// 独角兽一家数据协议
#define smTRANSCODE_CARAVAN_HOPY			0x50326012
#define smTRANSCODE_CARAVAN_SELECT			0x50326013
#define	rsHARDCORE_EVENT_FLAG				0x100
#define smCODE_SOD_EFFECT					100
#define smTRANSCODE_EVENT_GAME				0x50326007
#define smCODE_EVENT_STATE_INIT				100

#define smTRANSCODE_ITEMDOC					0x50326008


#define TRANS_BUFF_SIZE						4096

#define	smCHAR_STATE_NPC					0
#define	smCHAR_STATE_ENEMY					1
#define	smCHAR_STATE_USER					0x80

#define	smCHAR_MONSTER_NATURAL				0x80
#define	smCHAR_MONSTER_GOOD					0x81
#define	smCHAR_MONSTER_EVIL					0x82

#define	smCOMMNAD_USER_WARP					0x100
#define	smCOMMNAD_USER_AGINGUP				0x110
#define	smCOMMNAD_USER_HOLY_INCANTATION		0x120
#define	smCOMMNAD_USER_RESURRECTION			0x130
#define	smCOMMNAD_USER_FORCEORB				0x140
#define	smCOMMNAD_USER_VALENTO				0x150
#define	smCOMMNAD_USER_FIREFLOWER			0x160

#define	smCOMMAND_PLAY_BABEL				0x200
#define	smCOMMAND_PLAY_BELSS_CASTLE			0x210
#define	smCOMMAND_PLAY_PK_FIELD				0x220
#define	smCOMMAND_PLAY_KELVEZU				0x230
#define smCOMMAND_PLAY_WEATHER				0x300 //下雨协议

class	Unit;

class	rsRECORD_DBASE;

#define	FALLITEM_MAX						200
#define	FALLITEM2_MAX						3

struct _FALLITEM{
	DWORD	dwItemCode;
	int		Percentage;
	short	sPrice[2];
};

#define	NPC_MESSAGE_MAX		20


//某腐磐 沥焊 窜绵 农扁
#define	smCHAR_INFO_QUICK_SIZE		192
#define	smCHAR_INFO_QUICK_SIZE2		352

#define	THROW_ITEM_INFO_MAX		64
#define	THROW_ITEM_INFO_MASK	63
#define	INVEN_ITEM_INFO_MAX		300


//某腐磐 谅钎 备炼
struct rsPLAYPOS {
	DWORD	Area;		// Low->Wolrd High->Area	: 泅犁 粮犁窍绊 乐绰 瘤开狼 困摹 内靛
	int		x,y,z;		// 谅钎
};

//郴侩 : 磊脚狼 困摹棺 沥焊甫 辑滚俊 傈价
//措惑 : 努扼捞攫飘 -> 辑滚
//内靛 : smTRANSCODE_POSITION
//10檬 埃拜栏肺 辑滚俊 焊郴瘤绰 敲饭捞绢 困摹 沥焊
struct TRANS_PLAYPOS {
	int size,code;
	
	rsPLAYPOS	rsPlayPos;
	short Hp[2];
};



//郴侩 : 惑措茄抛 傍拜 沥焊甫 焊辰促
//措惑 : 努扼捞攫飘 -> 辑滚  努扼捞攫飘 -> 努扼捞攫飘
//内靛 : smTRANSCODE_ATTACKDATA
struct TRANS_ATTACKDATA
{
	int size,code;

	DWORD	dwDestObjectSerial;	//傍拜窍绰 某腐磐 绊蜡锅龋
	DWORD	dwTarObjectSerial;	//傍拜措惑 某腐磐 绊蜡锅龋

	int		x,y,z;			// 谅钎
	int		AttackState;	// 加己
	int		AttackSize;		// 傍拜 裹困
	int		Power;
	int		PowerType;
	DWORD	dwChkSum;

	short	sRating[2];	//[0]-饭骇 [1]-疙吝仿
	DWORD	dwDamageChkSum;
};

struct TRANS_ATTACKDATA2 {
	int size,code;

	DWORD	dwChkSum;

	DWORD	dwDestObjectSerial;	//傍拜窍绰 某腐磐 绊蜡锅龋
	DWORD	dwTarObjectSerial;	//傍拜措惑 某腐磐 绊蜡锅龋

	int		x,y,z;			// 谅钎
	int		AttackState;	// 加己
	int		AttackSize;		// 傍拜 裹困
	short	Power[2];		// 傍拜 颇况
	short	Power2[2];		// 傍拜 颇况 ( 眠啊 傍拜 )
	short	Critical[2];	// 农府萍拿
	int		SkillCode;		// 胶懦内靛
	DWORD	dwTime;			// 努扼捞攫飘 矫埃
	int		AttackCount;	// 傍拜 墨款磐
	short	MotionCount[2];	// 傍拜 葛记 墨款磐
	DWORD	dwWeaponCode;	// 林 傍拜 公扁
	short	Area[2];		// 瘤开
	int		Temp[4];		// 抗厚
};


// 厘喊 - 裹困屈 胶懦( 32 -> 42 )
#define SKIL_ATTACK_CHAR_MAX		42

struct TRANS_SKIL_ATTACKDATA
{
	int size,code;

	DWORD	dwDestObjectSerial;

	int x,y,z;
	int AttackState;
	int AttackSize;
	int Power;

	DWORD	dwChkSum;

	int	TargetCount;
	DWORD	dwTarObjectSerial[SKIL_ATTACK_CHAR_MAX];
};

struct TRANS_SKIL_ATTACKDATA2
{
	int size,code;

	DWORD	dwDestObjectSerial;	//傍拜窍绰 某腐磐 绊蜡锅龋

	DWORD	dwChkSum;

	int		x,y,z;			// 谅钎
	int		AttackState;	// 加己
	int		AttackSize;		// 傍拜 裹困
	short	Power[2];		// 傍拜 颇况
	short	Power2[2];		// 傍拜 颇况 ( 眠啊 傍拜 )
	short	Critical[2];	// 农府萍拿
	int		SkillCode;		// 胶懦内靛
	DWORD	dwTime;			// 努扼捞攫飘 矫埃
	int		AttackCount;	// 傍拜 墨款磐
	short	MotionCount[2];	// 傍拜 葛记 墨款磐
	DWORD	dwWeaponCode;	// 林 傍拜 公扁
	short	Area[2];		// 瘤开
	int		Temp[4];		// 抗厚

	DWORD	dwMainTargetObject;		//林 鸥百

	int	TargetCount;
	DWORD	dwTarObjectSerial[SKIL_ATTACK_CHAR_MAX];	//傍拜措惑 某腐磐 绊蜡锅龋
};



struct TRANS_AREAINFO_HEADER {
	int		size;
	int		code;
	DWORD	dwIP;
	int		Stats;					//傈价 肯丰搁 TRUE 酒流 歹 焊尘 单捞鸥啊 乐栏搁 FALSE
	int		TransListCnt;			//傈价窍绰 TRANS_IPLIST 肮荐
};
struct TRANS_IPLIST {
	DWORD	dwIP;
	rsPLAYPOS	Pos;
};


#define	srPLAYBUFF_MAX		4
#define	srPLAYBUFF_MASK		3

#define	PARTY_PLAYER_MAX		6

// 厘喊 - 抗厚滚欺
#define	srRECORD_DEFAULT_SIZE	16384
//#define	srRECORD_DEFAULT_SIZE	32768
#define	srRECORD_MEMORY_SIZE	24576
//#define	srRECORD_MEMORY_SIZE	49152

#define SKILL_POINT_COLUM_MAX	20

struct	TRANS_PARTY_PLAYINFO;

struct	npGAME_GUARD_AUTH_INFO {
	 DWORD	Auth_Value;		//霸烙啊靛 犬牢内靛 ( 蔼阑 府畔 罐澜 )
	 DWORD	Auth_Time;		//霸烙啊靛 犬牢矫埃 ( 促澜贸府 矫埃 )
	 DWORD	Auth_Count;		//霸烙啊靛 犬牢墨款磐 ( 醚 焊辰 冉荐 )
	 DWORD	Auth_Retry;		//霸烙啊靛 犬牢 犁矫档 ( 览翠捞 60檬 救俊 救坷搁 割锅鳖瘤 犁矫档 )
};

//酒捞袍 备概 墨款磐
struct	sMYSHOP_SELL_INFO {
	DWORD	dwCode;
	DWORD	dwHead;
	DWORD	dwChkSum;
	int		Price;
};

#define	MYSHOP_LIST_MAX		32
#define	MYSHOP_LIST_MASK	31


struct	sCASTLE_MASTER {
	int		Flag;
	DWORD	dwCheckTime;
	int		SelectSkill;
};

#define	rsDATA_ERROR_WAREHOUSE	1
#define rsDATA_ERROR_CARAVAN	2


struct smTRANS_COMMAND
{
	int	size;
	int code;

	int LParam;
	int WParam;
	int SParam;
	int EParam;
};

//冠犁盔 - XignCode
#define PACKET_SIZE 512


typedef struct _WSABUF {
	u_long      len;     
	char FAR *  buf;     
} WSABUF, FAR * LPWSABUF;


#define BILLING_GPTYPE_DAY		0
#define BILLING_GPTYPE_TIME		1
#define BILLING_GPTYPE_FREE		2
#define BILLING_GPTYPE_POTAL	3

#define BILLING_PGTYPE_PERSONAL	0
#define BILLING_PGTYPE_PCROOM	0




/////////////////////////////////////////////////////////////////////////////////////////

//郴侩 : 盲泼 巩磊凯 傈价 内靛
//措惑 : 努扼捞攫飘 <-> 辑滚
//内靛 : smTRANSCODE_CHATMESSAGE
struct TRANS_CHATBUFF {
	int		size;
	int		code;
	DWORD	dwIP;
};
struct CHATBUFF {
	DWORD	dwIP;
	char szMessage[256];
};

struct TRANS_CHATMESSAGE 
{
	int		size;
	int		code;
	DWORD	dwIP;
	DWORD	dwObjectSerial;

	char szMessage[256];
};


struct smPLAYDATA_GROUP {
	int		size,code;
	int		PlayDataCnt;
	DWORD	dwSendCode;
};


#define smPLAYBUFF_FRAME_NONE			0xFFFF0000

#define	smPLAYBUFF_ITEM_BODY			0
#define	smPLAYBUFF_ITEM_LEFT			1
#define	smPLAYBUFF_ITEM_RIGHT			2
#define	smPLAYBUFF_ITEM_SKIL			3
#define TRANS_PLAYDATA_EVENT_LEVEL		0
#define TRANS_PLAYDATA_EVENT_POTION		1
#define TRANS_PLAYDATA_EVENT_SKIL		2
#define TRANS_PLAYDATA_EVENT_EXT		3

struct smTRANS_CHAR_COMMAND
{
	int	size;
	int code;

	int LParam;
	int WParam;
	int SParam;

	char	szName[32];
};

struct smTRANS_CHAR_COMMAND2
{
	int	size;
	int code;

	int LParam;
	int WParam;
	int SParam;

	char	szId[32];
	char	szName[32];
};

struct smTRANS_MAP_LEVEL
{
	int size;
	int code;

	int MapLevel[MAX_FIELD];
};

struct smTRNAS_PLAYERINFO
{
	int	size;
	int code;

	CharacterData	sCharacterData;

	DWORD	dwObjectSerial;


	int	x,y,z;
	int ax,ay,az;
	int state;
};

struct smTRNAS_PLAYERINFO_QUICK
{
	int	size;
	int code;

	DWORD	dwObjectSerial;

	int	x,y,z;				//弥檬 谅钎
	int ax,ay,az;			//弥檬 阿档
	int state;				//加己

	CharacterData	sCharacterData;
};


//埃窜茄 内膏靛 傈价侩 备炼
struct smTRANS_COMMAND_DWORD
{
	int	size;
	int code;

	DWORD LParam;
	DWORD WParam;
	DWORD SParam;
	DWORD EParam;
};

struct smTRANS_COMMAND_EX
{
	int	size;
	int code;

	int LParam;
	int WParam;

	int SParam; //1
	int EParam; // 2

	int LxParam;
	int WxParam;
	int SxParam;
	int ExParam;

};


struct smTRANS_COMMAND_BUFF {
	smTRANS_COMMAND		smTransCommand;
	char	*Buff[256];
};

struct smTRANS_COMMAND_SOD {
	smTRANS_COMMAND		smTransCommand;
	int		MyScore;
	int		MyTeam;
	int		TeamScore[4];
	int		Temp[4];
};

struct smTRANS_COMMAND_POLLING {
	smTRANS_COMMAND		smTransCommand;
	BYTE	bPolling[10];
};



//加己 龋免
struct smTRANS_RESISTANCE {
	int	size;
	int code;
	int	Param;
	short Resistance[8];
	int	Absorb;
};


//傍己
struct smTRANS_BLESSCASTLE {
	smTRANS_COMMAND		smTransCommand;
	int				TaxRate;
	short			Tower[12];		//鸥况汲沥	
	unsigned char	MercenaryNum[4];	//int		MercenaryType;	//侩捍汲沥
	int				ClanSkill;		//努罚胶懦
	int				Price;
	DWORD			dwMasterClan;	//己林努罚
	int				Temp[4];
};

//傍拜鉴困 砰10
struct	rsUSER_LIST_TOP10 {
	//SYSTEM HEADER
	int		size,code;

	int		tCode;
	DWORD	dwObjectSerial;
	DWORD	dwNameCode;
	int		x,y,z;

	//BODY

	DWORD	dwCharCode;
	DWORD	dwUpdateTime;
	DWORD	dwTotalDamage;
	char	bCrystalTowerCount[4];
	DWORD	dwTemp[2];

	DWORD	dwUserCode[10];
	int		Damage[10];
	int		Counter[10];
};

/////////////// 酒捞袍阑 弊缝栏肺 弓绢辑 傈价 /////////////////////

/*
/////辑滚肺 焊郴龙 酒捞袍 备炼眉 
struct sCRAFTITEM_SERVER{
	int size, code;
	int DocIndex;
	int Result;
	sITEM DesCraftItem;
	DWORD SheltomCode[12];
	DWORD Head[12];
	DWORD CheckSum[12];
	int Index;
	int Money;
};
*/


//酒捞袍 弊缝栏肺 傈价
#define	TRANS_GROUPITEM_MAX		16
#define	TRANS_GROUPITEM_HEADER_SIZE		(14*4)

//拘绵阑 乾版快
struct	TRANS_ITEMINFO_GROUP {
	int	size,code;

	int Index;
	int Result;
	int Money;
	int	ItemCount;

	DWORD	dwTemp[8];

	Item	sItemInfo[TRANS_GROUPITEM_MAX];
};

//拘绵器杆
struct	TRANS_ITEMINFO_GROUP2 {
	int	size,code;

	int Index;
	int Result;
	int Money;
	int	ItemCount;

	DWORD	dwTemp[8];

	char	szBuff[ sizeof(Item) * TRANS_GROUPITEM_MAX ];
};


//窜老 酒捞袍 傈价
struct TRANS_ITEMINFO {
	//------------------------------------------------------------------< _ignore_bug_fix_0x00000000_ //秦寇
	/*
	TRANS_ITEMINFO()  // 积己磊
	{
		size = 0,code = 0;x=0,y=0,z=0,
		ZeroMemory(&Item,sizeof(Item));
		for(int i=0;i<4;i++)
		{
			dwSeCode[i] = 0;
		}
		
	};
	*/
	//------------------------------------------------------------------  _ignore_bug_fix_0x00000000_ >
	int	size,code;

	//char	szItemName[32];
	//DWORD	ItemCode;

	Item	sItem;

	int x,y,z;

	DWORD	dwSeCode[4];		//焊救 内靛
};


struct	TRANS_ITEM_CODE {
	int size,code;

	DWORD	dwFlag;

	DWORD	dwItemCode;
	DWORD	dwHead;
	DWORD	dwChkSum;
	DWORD	dwTime;
};


struct TRANS_ITEM {
	int			state;

	int			type;
	int			ItemCode;

	int			x,y,z;
	char		szName[64];
	void		*lpStgArea;
	//char szModelName[64];
};


struct _TRANS_THROW_ITEM {
	DWORD	dwCode;
	DWORD	dwHead;
	DWORD	dwChkSum;
};

#define	THROW_ITEMS_MAX				32
//备炼眉 庆歹 荤捞令
#define	TRANS_THROW_ITEMS_DEFSIZE	(sizeof(int)*4)

struct TRANS_THROW_ITEMS {
	int		size,code;
	int		ThrowItemCount;
	int		Temp;

	_TRANS_THROW_ITEM	ThrowItems[THROW_ITEMS_MAX];
};



//芭贰饶 酒捞袍 焊绊
struct _TRANS_RECORD_TRADE_ITEM {
	DWORD	dwCode;
	DWORD	dwHead;
	DWORD	dwChkSum;
	int		State;
};

//sinTrade.h 俊辑 犁沥狼
#define _MAX_TRADE_ITEM			20

struct TRANS_TRADE_ITEMKEY	{
	int size,code;
	DWORD	dwSender;
	DWORD	dwRecver;
	DWORD	dwSum;

	DWORD	dwItemCode[_MAX_TRADE_ITEM];
	DWORD	dwItemKey[_MAX_TRADE_ITEM];
	DWORD	dwItemSum[_MAX_TRADE_ITEM];

	int		Money;
};


#define	TRADE_RECV_ITEMS_MAX				32

//备炼眉 庆歹 荤捞令
#define	TRANS_RECORD_TRADE_DEFSIZE		(sizeof(int)*16)

struct TRANS_RECORD_TRADE_ITEMS {
	int		size,code;
	int		Money;
	int		ThrowItemCount;
	char	szTradeUserName[32];			//惑措规 某腐疙
	int		Temp[4];

	_TRANS_RECORD_TRADE_ITEM	Items[TRADE_RECV_ITEMS_MAX];
};


#define TRANS_ITEM_MAX			16

//酒捞袍 沥焊
struct smTRANS_ITEMS
{
	int size,code;

	int state;
	int Count;

	TRANS_ITEM	Items[ TRANS_ITEM_MAX ];
};

//酒捞袍 沥焊
struct smTRANS_ACITON_ITEM
{
	int size,code;

	int state;

	int			x,y,z;
	void		*lpStgArea;
};
//惑痢 酒捞袍 沥焊
struct smTRANS_SELL_ITEM {
	int size,code;
	int	ItemKind;					//傍拜 / 规绢 /扁鸥 殿殿狼 备盒
	int	ItemCounter;				//魄概 酒捞袍狼 荐
	int	Ext[4];						//抗厚
};

//酒捞袍 背券 芒
#define TRANS_TRADE_BUFF_SIZE		4000
struct TRANS_TRADEITEMS {
	int size,code;
	DWORD	dwSender;
	DWORD	dwRecver;
	DWORD	dwSum;
	DWORD	Temp[4];

	BYTE	TradeBuff[TRANS_TRADE_BUFF_SIZE];
};

#define	SOD_RESULT_MAX	32

struct	_SOD_RESULT {
	char		szName[32];
	User	*lpPlayInfo;
	int			JobCode;
	int			Class;
	int			Score;
	int			Monster;
	DWORD		dwTemp[4];
};

//SoD 鉴困 沥焊
struct	TRANS_SOD_RESULT {
	int	size,code;

	DWORD	dwGameCode;
	DWORD	dwGameTime;
	DWORD	dwDisplayMode;
	short	TeamRound[2];

	DWORD	dwTemp[15];

	int		ResultCount;

	_SOD_RESULT	Result[SOD_RESULT_MAX];
};



//////// 辑滚客 努扼捞攫飘狼 捣,版氰摹 荐摹 炼雀 //////////
struct	sSERVER_MONEY {
	int	InputMoney;
	int	Counter;
	int	TotalX;
	int	TotalY;
	int	TotalZ;
};

struct sSERVER_EXP {
	int	Counter;
	int	InputExp;
	int	Total1;
	int	Total2;
};

struct TRANS_TOTAL_EXPMONEY {
	int	size,code;

	sSERVER_MONEY	sServerMoney;
	sSERVER_EXP		sServerExp;
};

//单捞鸥 辑滚肺 努扼捞攫飘 版蜡 傈价
struct	TRANS_SEND_DATASERVER {
	int size,code;
	char	szBuff[1024];
};


//酒捞袍 备涝侩 备炼眉
struct	TRANS_BUY_SHOPITEM {
	int	size,code;

	ItemData	sItem;			//备涝窍绰 酒捞袍
	int		ItemCount;		//备涝窍绰 酒捞袍 肮荐
};



//芭贰矫 酒捞袍 焊辰饶 焊辰 酒捞袍捞 牢亥俊 粮犁 窍绰瘤 犬牢
struct	_TRANS_USINGITEM {
	DWORD	dwCode;
	short	Performance[8];
};

struct	TRANS_USINGITEM {
	int	size,code;
	int	ItemListCount;
	_TRANS_USINGITEM	ItemList[16];
};


#define	PARTY_STATE_NONE		0
#define	PARTY_STATE_MASTER		1
#define	PARTY_STATE_MEMBER		2


struct _PARTY_USER 
{
	char	szName[32];				//捞抚
	char	szModelName[64];		//葛胆 捞抚
	char	szModelName2[64];		//葛胆 捞抚2

	DWORD	dwObjectSerial;			//按眉 绊蜡锅龋
	DWORD	Level;
	short	Life[2];
	DWORD	Class;
	int		x,z;
};

struct TRANS_PARTY_USERS {
	int		size,code;

	DWORD	dwObjectSerial;
	DWORD	dwTemp[8];

	int		PartyUserCount;

	_PARTY_USER		PartyUser[PARTY_PLAYER_MAX];
};

struct _PARTY_PLAYINFO
{
	DWORD	dwObjectSerial;			//按眉 绊蜡锅龋
	DWORD	Level;					//等级
	short	Life[2];				//生命
	DWORD	Class;
	int		x,z;
};

struct	TRANS_PARTY_PLAYINFO 
{
	int		size,code;

	DWORD	dwObjectSerial;
	DWORD	dwTemp;

	int		PartyUserCount;

	_PARTY_PLAYINFO	PlayInfo[PARTY_PLAYER_MAX];
};

struct	TRANS_PARTY_SKILL {
	int		size,code;
	DWORD	dwSkillCode;
	int		Point;
	int		wParam;
	int		lParam;
	int		sParam;
	int		eParam;
	int		PartyCount;
	DWORD	dwPartyUser[8];
};

struct TRANS_CLAN_COMMAND_USER {
	int size,code;
	int	Param[4];
	int	UserCount;

	char	szUserBuff[2048];
};

#define	CLAN_USER_MAX	64

struct _CLAN_USER_INFO {
	char		szName[32];
	DWORD		dwSpeedSum;
	DWORD		dwObjectSerial;
	User	*lpPlayInfo;
};

struct	rsCLAN_INFOMATION {
	DWORD	dwClanCode;
	DWORD	dwTemp[32];

	_CLAN_USER_INFO	ClanUserInfo[CLAN_USER_MAX];
};
struct	TRANS_WAREHOUSE 
{
	int size,code;

	DWORD	dwChkSum;
	WORD	wVersion[2];
	int		WareHouseMoney;
	DWORD	dwTemp[5];

	int		DataSize;
	BYTE	Data[sizeof(ItemData)*100+256];
};
struct TRANS_CARAVAN
{
	int		size,code;
	DWORD	dwChkSum;
	WORD	wVersion[2];

	int		DataSize;
	BYTE	Data[sizeof(ItemData) * 100 + 256];
};

#define	TRANS_SERVER_MAX		8

//辑滚 沥焊
struct _TRANS_SERVER_INFO {
	char	szServerName[32];
	char	szServerIp1[20];
	char	szServerIp2[20];
	char	szServerIp3[20];

	DWORD	dwServerPort1;
	DWORD	dwServerPort2;
	DWORD	dwServerPort3;

	DWORD	ConnState;
};

struct TRANS_SERVER_LIST
{
	int size,code;

	char szServerName[16];

	DWORD dwServerTime_t;
	int		ClanTicket;
	int	dwTemp[1];
	int	ClanServerCount;
	int	ServerCount;
	_TRANS_SERVER_INFO ServerInfo[TRANS_SERVER_MAX];
};

#define	SERVER_MAP_MAX		64

struct	TRANS_SEVER_MAP {
	int size,code;

	DWORD	dwTemp[30];

	int		IP_Count;
	DWORD	dwIP[SERVER_MAP_MAX];
};

struct	TT_DATA_SERVER_INFO {
	char	szServerID[16];
	char	szServerPath[128];
};

struct sEVENT_CASTLE_EXPUP
{
	int MinLevel;
	int MaxLevel;
	int TimeDelay;
};

#define	SYSTEM_IP_MAX			32
#define	LOGIN_IP_MAX			16
#define	DISABLE_IP_MAX			500
#define	ENABLE_IP_MAX			100
#define	ADMIN_IP_MAX			16
#define CLAN_SERVER_MAX			3
#define ENABLE_MODULE_CHECK_MAX	64	
#define	TT_DATA_SERVER_MAX		16

//辑滚 汲沥 备炼
struct rsSERVER_CONFIG	{

	DWORD	ServerCode;
	DWORD	AutoPlayer;
	DWORD	DisableParty;		//悼丰陛瘤
	DWORD	EnablePlayerKill;	//PK倾啊
	DWORD	ConnectUserMax;		//弥措 立加 倾啊 牢盔

	int		TestSeverMode;		//抛胶飘 辑滚侩

	int		UseRecorMemory;		//历厘单捞鸥 皋葛府 滚欺荤侩
	int		PotionMonitor;		//拱距 皑矫

	int		ClientCheckSumCount;	//努扼捞攫飘 眉农级 墨款磐
	int		ClientCheckOut;			//巩力 努扼捞攫飘 立加 辆丰
	DWORD	dwClientCheckSum[32];	//立加 啊瓷茄 眉农级 格废

	int		SafeClientCodeCount;	//努扼捞攫飘狼 沏记媒农 内靛墨款飘
	int		ClientCodeCheckOut;		//沏记巩力 努扼捞攫飘 立加 辆丰
	DWORD	dwSafeClientCode[32];	//努扼捞攫飘狼 沏记媒农 内靛

	int		LimitVersion;			//立加 啊瓷茄 弥窍 滚傈
	int		LimitVersionMax;		//立加 啊瓷茄 弥惑 滚傈
	char	szAdminPassword[3][32];	//包府磊 鼻茄 何咯 菩胶况靛
	char	szAdminName[32];		//包府磊 捞抚

	char	szAdminIP[16];			//包府磊 IP
	char	szAdminLogPassword[32];	//包府磊 Password

	char	szServerName[64];		//辑滚 捞抚
	int		Enable_PK;				//PK倾啊
	int		CheckProtect;			//nProtect 荐矫肺 八荤蜡公
	DWORD	RemoveNProtectTime;		//霸烙吝俊 nProtect力芭 矫埃

	char	szDebugIP[10][32];		//叼厚彪侩 IP
	int		DebugIP_Count;			//叼滚彪 IP 墨款磐

	char	szDebugID[32][32];		//叼滚彪侩 ID
	int		DebugID_Count;			//叼滚彪侩 ID 墨款磐

	int		BlockLevel;				//ID 烙矫 喉钒狼 饭骇
	int		BlockLevel_LogOut;		//肺弊 酒眶矫俊父 利侩( 吝惫螟 夸备 )
	int		ItemCodeOut;			//酒捞袍 内靛 坷幅矫 辆丰

	int		ClientFuncCheckMode;	//努扼捞攫飘 沏记 八荤 葛靛
	int		Enable_PartyItem;		//悼丰啊 裙垫茄 酒捞袍 免仿
	int		CharLevel;				//设置角色等级
	
	int		Event_Mandoo;			//父滴(价祈) 捞亥飘
	int		Event_HardCore;			//窍靛内绢 捞亥飘
	int		Event_DamageOff;		//傍拜仿 劝牢 捞亥飘

	int		Event_DefenseOff;		//阁胶磐 规绢仿 距拳 捞亥飘
/////////////////////////////////////////////////////////////////////////////////////////
	int		Event_Child;			//绢赴捞 捞亥飘
	int		Event_Cristal;			//农府胶呕 捞亥飘 ( 漂沥 矫埃措俊 农府胶呕 阁胶磐 碍拳 )
	int		Event_Potion;			//拱距 捞亥飘 ( 拱距 悼矫俊 冻绢瘤绰 肮荐 刘啊 )
	int		Event_StarPointTicket;	//喊器牢飘 捞亥飘 ( 喊惑前鼻 惯积 )
	int		Event_ValentineDay;		//惯坊鸥牢 单捞 捞亥飘
	int		Event_WhiteDay;			//拳捞飘 单捞 捞亥飘
	int		Event_MorifSheltom;		//葛府橇狼 僵乓 呕秒 捞亥飘
	int		Event_MollyWolf;		//隔府客戳措 捞亥飘
	int		Event_Ghost;			//绊胶飘 捞亥飘
	int		Event_SantaGoblin;		//魂鸥绊喉赴 捞亥飘
	int		Event_WorldCup;			//岿靛呐 捞亥飘
	int		Event_ExpUp;			//版氰摹诀 捞亥飘
	int		Event_CoupleRing;		// pluto 目敲傅 捞亥飘
	int		Event_Watermelon;		// 冠犁盔 - 荐冠 捞亥飘
	int		Event_Star;				// 冠犁盔 - 广窍疵狼 家盔捞亥飘
	int		Event_Valentine;		// 厘喊 - 惯坊鸥牢 捞亥飘
	int		Event_PristonAlphabet;	// 冠犁盔 - 舅颇邯 炼钦 捞亥飘
	int		Event_WhiteContrast;	// 厘喊 - 拳捞飘能飘扼胶飘 捞亥飘
	int		Event_Candydays;		// 厘喊 - 牡叼单捞令
	int		Event_BlackSmith;		// 厘喊 - 措厘厘捞狼 去
	int		Event_MagicalGreen;	// 厘喊 - 概瘤拿弊赴
	int		Event_TearOfKara;		// 厘喊 - 墨扼狼 传拱
	int		Event_WarerMelonMonster;		// 厘喊 - 荐冠阁胶磐 捞亥飘
	int		Event_Chichen_Day;		// 冠犁盔 - 汗朝 捞亥飘(酒扁 部绊 阁胶磐啊 唱鸥抄促)
	int		Event_MovieBloodyBattle; // 厘喊 - 康拳 趋捧
	int		Event_SummerChicken;	//伙拌帕 捞亥飘
	int		Event_GiftBox;			// pluto 急拱惑磊 捞亥飘
	int		Event_Weath;			// 下雨刷怪物
	int		Event_Monster_HP;		// 	怪物的HP活动

	sEVENT_CASTLE_EXPUP Event_Castle_Expup[10]; //城里获得经验;

	int		Event_ExpUpCount;		// 总数变量

	int		BlessCastleMode;			//喉饭胶某浇 汲沥
	short	sBlessCastle_StartTime[2];	//喉饭胶某浇 矫累 矫埃 抗距 [0]夸老 [1]矫埃

	int		Event_Fruit;				//果实

	int		FieldCount;					//地图统计

	int		Record_JobChanger;		//傈诀茄磊 扁废
	int		ForeverBlockMode;		//康盔茄 喉钒

	int		Permit_Exp;				//倾侩坷瞒 版氰摹
	int		Permit_Money;			//倾侩坷瞒 捣

	int		ClientProcessTimeChk;	//努扼捞攫飘 橇肺技胶 矫埃皑矫 弥措摹
	int		ClientProcessTimeChkOut;//努扼捞攫飘 橇肺技胶 矫埃 檬苞矫 楷搬辆丰
	int		Dis_PotionError;		//器记 俊矾唱搁 楷搬 馋澜

	int		ExpFixMode;				//坷幅 版氰摹 焊沥

	char	szBlockUserPath[64];	//蜡历 喉钒 单捞鸥 版肺

	int		DispBillingTime;		//呼傅 巢篮矫埃 钎矫

	int		Disable_LogIn;			//肺弊牢 陛瘤
	int		Disable_LogQue;			//肺弊钮 贸府 陛瘤
	int		Disable_CheckLogOut;	//肺弊酒眶 钮八荤 陛瘤

	int		Disable_LogIn2;			//肺弊牢 陛瘤2锅掳 脚痹 肺弊牢父 陛瘤
	int		Disable_PCBang;			//PC规 陛瘤 葛靛

	int		ExpGameTimeMode;		//版氰摹 矫埃喊 盒硅(海飘巢)

	int		ChageJobLevel;			// 专职等级

	int		GamePort;				// 游戏端口

	int		ServerInventoryMode;	//辑滚狼 啊惑牢亥配府肺 酒捞袍 包府

	DWORD	DisableIP[DISABLE_IP_MAX][2];		//立辟 力茄 IP
	int		DisableIP_Count;					//立辟 力茄 IP 汲沥 荐

	DWORD	EnableIP[ENABLE_IP_MAX][2];			//立辟 力茄 IP吝 倾啊登绰 IP
	int		EnableIP_Count;						//立辟 力茄 IP 汲沥 荐

	DWORD	AdminIP[ADMIN_IP_MAX][2];			//包府磊 IP 格废
	int		AdminIP_Count;						//包府磊 IP 汲沥 荐

	DWORD	SystemIP[SYSTEM_IP_MAX][2];			//矫胶袍 IP 格废
	int		SystemIP_Count;						//矫胶袍 IP 汲沥 荐

	DWORD	LoginServerIP[LOGIN_IP_MAX][2];		//肺变辑滚 IP 格废
	int		LoginServerIP_Count;				//肺变辑滚 IP 汲沥 荐

	char	szBackupPath[80];					//*归诀弃歹捞抚

	char	szClanServerIP[CLAN_SERVER_MAX][20];	//努罚 辑滚	林家
	int		ClanServerPort[CLAN_SERVER_MAX];		//努罚 辑滚 器飘
	int		ClanServerCount;


	DWORD	Enable_ClientModule[ENABLE_MODULE_CHECK_MAX];	//努扼捞攫飘 葛偏媒农级
	int		Enable_ClientModuleCount;						//努扼捞攫飘 葛碘 媒农级 墨款磐

	int		Disable_DecSkillPoint;							//胶懦 器牢飘 皑家 媒农 贸府

	int		Disable_Quest;									//陛瘤 涅胶飘 汲沥

	int		CrazyPacketMode;							//焊救 菩哦 葛靛

	char	szNoticeURL[256];							//Notice URL 汲沥


	TRANS_SEVER_MAP	AreaServer;							//瘤开喊 辑滚 概俏

	char	szLinkServerIP[32];							//傅农等 辑滚 IP

	int		RecordAdminCommand;							//款康磊 疙飞 扁废

	int		FreeLevel;									//公丰 饭骇
	char	szFreeGpCode[32];							//公丰荤侩 GPCODE
	int		PresentLevel;								//急拱林绰 饭骇
	int		Event_ComicBirthDay;						//积老急拱 倔奴捞
	int		Event_Puzzle;								//欺榴 嘎眠扁 捞亥飘
	int		Event_BabelHorn;							//官骇辉捞亥飘
	int		Event_NineFox;								//备固龋捞亥飘
	int		EVENT_Christmas;							//农府胶付胶 捞亥飘
	int		EventPlay_BitMask;							//捞亥飘 敲饭捞 厚飘付胶农
	int		Event_PCBangPet;							//PC规 脐 捞亥飘

	int		StartUser_PresentItem;						//矫累蜡历俊霸 急拱 林扁

	int		GameGuard_Auth;								//霸烙啊靛 焊救 汲沥

	int		TT_DataServer_Count;									//配呈刚飘辑滚 单捞鸥 版肺 肮荐
	TT_DATA_SERVER_INFO		TT_DataServer[TT_DATA_SERVER_MAX];		//配呈刚飘辑滚 单捞鸥 沥焊

	int		FixedStartField;							//矫累 鞘靛 碍力 绊沥矫虐扁
	int		DisableThrowItem;							//酒捞袍 顶俊 给滚覆

	int		CheckPlayField;								//努扼捞攫飘 客 辑滚狼  鞘靛 瘤屈 厚背 八荤

	int		Enable_PKField;								// PK倾侩 鞘靛 锅龋

	int		Enable_PKField_All;							// pluto PK倾侩 鞘靛 傈何

	//胶挪琴 规瘤
	int		CheckModelFile;								//葛胆颇老 犬牢 可记

	bool	bPK_LOG;
	rsSERVER_CONFIG()
	{
		bPK_LOG = false;
	};
};

//版氰摹客 捣狼 搬苞 茄拌摹 ( 捞茄拌甫 逞绢啊搁 历厘捞 救等促 )
#define	TOTAL_CHECK_MONEY_MAX		52000
#define	TOTAL_CHECK_EXP_MAX			100000




/////////////////// 努扼捞攫飘 沏记 困摹 备炼眉 ////////////////////////
#define	dwFUNC_VALUE_MAX	64

struct	sFUNC_VALUE {
	DWORD	dwFunc;
	DWORD	dwLen;
	DWORD	dwChkSum;
};

struct	TRANS_CLIENT_FUNPOS {
	int	size,code;

	int	ClientVersion;

	DWORD	dwFunc_CheckMemSum;
	int		FuncCount;

	sFUNC_VALUE	dwFuncValue[dwFUNC_VALUE_MAX];
};


struct	TRANS_FUNC_MEMORY	{
	int		size,code;
	int		Param[8];
	char	szData[6000];
};


struct	sCHK_POTION_COUNT  {
	int	Ps101;
	int	Ps102;
	int	Ps103;
	int	Ps104;

	int	Pm101;
	int	Pm102;
	int	Pm103;
	int	Pm104;

	int	Pl101;
	int	Pl102;
	int	Pl103;
	int	Pl104;
};

//SOD 痢荐 免仿
struct	sSOD_SCORE {
	int		Flag;
	DWORD	dwDispTime;
	int		Score;
	int		MyTeam;
	int		TeamScore[4];
	int		Round;
	DWORD	dwPlayTime;

	/////// SOD 楷免 捞亥飘 /////////

	DWORD	dwSoD_NextStageTime;		//促澜 胶抛捞瘤 逞绢啊绰 矫埃
	int		SodNextStageNum;			//逞绢哎 胶抛捞瘤 锅龋
	int		NextRound;
	DWORD	dwSoD_CloseStageTime;		//拳搁篮 摧绰 捞棋飘 利侩矫埃

	///////// SOD 抗距 楷免 //////////////
	int		EffectStartCount;			//捞棋飘 矫累鳖瘤狼 墨款磐
	int		EffectCode;					//捞棋飘 内靛

	//////// SOD 垫痢 瓤苞 /////////////
	int		ScoreEffectCount;				//垫痢 瓤苞

};

class User
{
public:
	BOOL				bInUse;
	char				szServerID[32];

	char				szAccountName[32];
	char				szCharacterName[32];

	DWORD				dwHashAccountName;
	DWORD				dwHashCharacterName;

	ID					iID;
	int					iAccountID;
	int					iCharacterID;

	UINT				uSerialHD;

	BOOL				b16;
	BOOL				b32;
	BOOL				b64;

	BOOL				bEXPPotion;

	PacketPlayDataEx	pData;

	int					AdminOperMode;

	BOOL				bCheckedGameMaster;

	DWORD				dwDataError;

	int					TransInfoFlag;

	BOOL				bKeepAlive;

	int					CharLoadingCount;

	EMapID				iMapID;
	Point3D				sPosition;
	Point3D				sAngle;

	User				**lpAreaPlayInfo;

	int					SendListCnt;

	DWORD				dwDecPacketCode;
	BYTE				bPacketXor[2];
	DWORD				dwDecPacketTime;
	DWORD				dwDecPacketTime2;

	CharacterData		sCharacterData;

	int					dwVipLevel;
	DWORD				dwVipTime;

	int					CharLevelMax;
	DWORD				dwNoticeCount;

	UINT				uaUpdateCounter1[1024];		//0x6EB0
	UINT				uaUpdateCounter2[1024];		//0x6EB0 + 0x1000
	USHORT				uaUpdateCounter3[1024];		//0x6EB0 + 0x1000 + 0x1000
	USHORT				uaUpdateCounter4[1024];		//0x6EB0 + 0x1000 + 0x1000 + 0x800
	UCHAR				uaUpdateCounter5[4096];		//0x6EB0 + 0x1000 + 0x1000 + 0x800 + 0x800

	DWORD				dwaTimeUnitStatus[5];

	BYTE				baUnitStatusNew[5][0x2000];

	int					iMovingIndex;

	DropItemData		ThrowItemInfo[64];

	DropItemData		InvenItemInfo[316];
	DropItemData		WareHouseItemInfo[120];
	BOOL				bWarehouseOpen;

	int					iWarehouseError;
	int					iWarehouseGold;
	DropItemData		sWarehouseItems[420];
	DropItemData		saTradeItems[20];

	DropItemData		CaravanItemInfo[120];
	int					OpenCaravanInfoFlag;

	DWORD				dwTradePotionInfo[16];
	int					TradePotionInfoCount;

	SellItemShopData	sMyShopList[32];
	int					MyShopListCount;
	DWORD				dwMyShopTradeTime;

	int					ThrowItemCount;

	int					dwLevelQuestLogCheck;
	int					dwElementaryQuestLogCheck;

	int					UnsaveMoney;

	int					iInventoryGold;
	int					WareHouseMoney;

	DWORD				dwRecvTimePlayBuff;
	DWORD				srSendPlayBuffCnt;
	DWORD				uUnitStatusNum;

	int					ChatMsgMode;
	char				szChat[256];

	BOOL				bMuted;
	DWORD				dwChatTradeTime;

	char				szTradeMessage[128];
	DWORD				dwTradeMsgCode;

	SocketData *		pcSocketData;

	DWORD				dwTimeLastPacket;
	DWORD				dwTimeLastStatusUpdate;

	int							iPacketCounter;
	DWORD						dwTickPacketCounter;

	BOOL						bClosingSocket = FALSE;

	int							UpdateInfo_WaitCounter;	//诀单捞飘 沥焊 措扁 墨款磐
	int							UpdateInfo_WarnigCounter;	//诀单捞飘 沥焊 版绊 (穿利登搁 楷搬 辆丰 )

	ItemBoxSlot					sItemBox;
	ItemBoxSlotEx				sItemBoxEx;

	BOOL						bCharacterExLoaded;
	CharacterDataEx				sCharacterDataEx;

	PacketCharacterRecordData *	psCharacterData; //临时数据
	int							iCurrentBlock;

	EGameLevel					iGameLevel;
	BOOL						bCloak;
	int							AdminIP;

	DWORD						dwConnectTime;			//立加茄 矫埃

	int							LastTransPlayUserCount;
	int							LastTransAutoPlayCount;

	DWORD							dwConnectCount;

	int								iServerIndexID;

	BOOL							bAFK;

	int								frame;
	int								iUnitStatusCounter;

	UINT							uLethalSightLevel;
	UINT							uLethalSightRange;
	UINT							uLethalSightCritical;
	UINT							uLethalSightDamageBoost;
	DWORD							dwLethalSightTimeOut;

	UINT							uFierceWindLevel;
	DWORD							dwFierceWindTimeOut;

	UINT							uHolyConvictionLevel;
	DWORD							dwHolyConvictionTimeOut;

	UINT							uWizardTranceLevel;
	DWORD							dwWizardTranceTimeOut;

	//Skill Data
	PacketSkillStatus				sSkillStatus;
	PacketSkillStatusContainer		sSkillContainer;

	UINT							uBufferSkillPosition;

	//Unit Status
	UINT							uPriorityCounter;
	UINT							uPriority;

	//Status Send Buffers
	UINT							uBufferPosition;
	PacketUnitStatusContainer		sUnitStatusContainer;
	UINT							uBufferPositionM;
	PacketUnitStatusContainer		sUnitStatusContainerM;

	DWORD			MonTranCount;			//阁胶磐/NPC 傈价 霖厚
	DWORD			CharTransCount;			//某府磐 傈价 霖厚

	int				HitMonsterCount;		//傍拜茄 阁胶磐 墨款磐
	Unit			* pcLastAttack;
	DWORD			lLastAttackID;

	int				UserPacketLoop;			//蜡历 1风俏矫 傈价等 菩哦 荐摹 ( 傈价烹拌 荐摹 )
	int				BefUserPacketLoop;		//捞傈 1风俏矫 傈价等 菩哦 荐摹 ( 傈价烹拌 荐摹 )

	int				AttackCount;			//傍拜 墨款磐			
	DWORD			dwAttackTime;			//傍拜 矫埃
	DWORD			dwLastAttackTime;		//弥辟 傍拜矫埃
	int				DamagePacketCount;		//傍拜 菩哦 墨款磐
	DWORD			dwDamagePacketTime;		//单固瘤 菩哦阑 焊辰 努扼捞攫飘 螟 矫埃

	UINT			uUnitKillCounter;
	DWORD			dwLastTradeChksum;		//付瘤阜 芭贰矫 媒农级
	DWORD			dwLastTradeTime;		//付瘤阜 芭贰矫 矫埃

	DWORD			dwExpTime;

	short			sLowLevel_PresentItem[2];	//历饭骇 酒捞袍 急拱

	DWORD			dwStartUser_PresentItem_Time;	//矫累蜡历 酒捞袍 急拱
	DWORD			dwStartUser_PresentItem_Count;	//矫累蜡历 酒捞袍 急拱

	int				Send_AttackCount;
	int				Send_AttackDamage;
	int				Recv_AttackCount;
	int				Recv_AttackDamage;

	DWORD			dwMacroTime;
	DWORD			dwMacroAngTime;
	DWORD			dwMacroChkTime;

	DWORD			dwSendFrames[PLAYERS_MAX];

	int				CrackWarning;				//农发 荤侩 蜡历
	DWORD			dwTime_Disconnect;			//楷搬馋扁 抗距
	int				BadPlayer;					//唱慧 敲饭捞绢 ( 葛电 傍拜 公瓤 )
	DWORD			dwPacketAttackCount;		//苞档茄 菩哦栏肺 牢茄 傍拜 皑瘤 
	DWORD			dwPacketAttackTime;			//苞档茄 菩虐傍拜 皑瘤矫累 矫埃
	int				WarningCount;				//版绊 墨款飘

	CharacterFile	*psCharacterFile;
	DWORD			dwRecordDataTime;			//弥辟 扁废矫埃

	DWORD			dwExclusiveNum;
	int				iBellatraScore;
	int				iBellatraKills;
	DWORD			dwEventTime;
	short			sBellatraRoomID;
	short			sZero;

	int				iTradeCoin;

	int				AreaOutCount;				//康开魔裹 墨款磐

	int				BlockTime;					//拌沥 喉钒矫懦 矫埃

	int				Event_StarTicketLevel;		//喊 惑前鼻 惯积 饭骇

	User					* pcUserDataSpyoner;

	PacketSettingsData		sSettingsData;

	LARGE_INTEGER			liEXP;
	int				spMoney_Start;
	int				spLevel_Start;

	int				spExp_InOut_Total;			//版氰摹 免仿 配呕
	int				spMoney_In_Total;			//捣 涝陛 配呕
	int				spMoney_InOut_Total;		//捣 免陛 配呕

	int				spEXP_Out;					//版氰摹 免仿
	int				spMoney_In;					//捣 涝陛
	int				iGoldOut;

	DWORD			dwLastExpMoneyCheckTime;	//付瘤阜栏肺 版氰摹 陛咀 厚背茄 矫埃
	DWORD			dwLastExpMoneyTransServer;	//焙辑滚肺 版氰摹 陛咀 荐摹 傈价茄 矫埃

	DWORD			dwDisconnectTime;

	int				Client_Version;				//荤侩吝牢 努扼捞攫飘狼 滚傈 沥焊

	DWORD			dwLastSaveTime;				//付瘤阜栏肺 历厘茄 矫埃

	DWORD			dwNSpriteTime;				//nSprite 八荤茄 矫埃

	//努扼捞攫飘 沏记 媒农
	DWORD			dwClientFuncChk_1;			//媒农茄 沏记1
	DWORD			dwClientFuncChk_2;			//氖农茄 沏记2
	int				FuncChkFailCount1;			//角菩
	int				FuncChkFailCount2;			//角菩
	int				FuncChkSucessCount1;		//己傍
	int				FuncChkSucessCount2;		//己傍
	DWORD			dwFuncChkErrorFlag;			//俊矾
	int				ClientFunChk1_Count;
	int				ClientFunChk2_Count;

	DWORD			dwClientFunChk_NextTime;	//促澜 媒农且 矫埃

	int				RecordWarningCount;			//霸烙 历厘扁废 版绊 墨款磐

	DWORD			dwClentOS;					//努扼捞攫飘 OS
	WORD			wClentOSVersion[2];			//努扼捞攫飘 滚傈 [0]-滚傈 [1]-呼靛锅龋
	DWORD			dwClentModulChkSum;			//努扼捞攫飘 葛碘 媒农级
	int				ClentModuleCount;			//努扼捞攫飘 葛偏 肮荐

	DWORD			dwDamagePacketKey[2];		//单固瘤 菩哦 鞠龋侩 虐 ( 荐脚侩 )
	DWORD			dwDamagePacketKey2[2];		//单固瘤 菩哦 鞠龋侩 虐 ( 价脚侩 )

	//Party
	BOOL						bParty;
	PartyInfo					* psParty;

	ULONG						iClanID;
	int							iTicket;
	int							SucessCheck_ClanCode;

	//bc
	int							iBlessCastleScore;


	//////////////////// 呼傅 包访 函荐 /////////////////////////

	char	szGuid[128];			//肺弊牢 侥喊磊
	char	szPwd[32];			//菩胶况靛
	char	szGPCode[16];		//惑前内靛
	time_t	DisuseDay;			//辆丰 朝楼
	int		UsePeriod;			//巢篮矫埃 檬
	int		GpCode;				//惑前内靛
	int		GpType;				//惑前鸥涝 ( 俺牢 / PC规 )
	DWORD	dwPeriodTime;		//辆丰 矫埃
	int		Bl_RNo;				//PC规 荤侩 蜡公
	int		Bl_Meter;			//辆樊力
	DWORD	dwPeriodTime2;		//见败柳 辆丰矫埃 ( 怕惫固己斥磊 殿殿 )


	////////////////// 酒捞袍 价荐脚 焊救 内靛 /////////////////////

	int		SndItemSecCodeCount;			//酒捞袍 焊救 积己 内靛 墨款磐
	int		RcvItemSecCodeBuff[8][16];		//罐篮 酒捞袍 焊救 墨款磐 烙瘤 历厘 滚欺

	/////////////////////////////////////////////////////////////////

	short	sLimitDamage[2];				//傍拜仿 力茄
	short	sLimitCritical[2];				//农府萍拿 力茄

	/////////////////////////////////////////////////////////////////

	int		ServerPotion[3][4];				//拱距肮荐 犬牢滚欺

	int		UseMonsterNum;

	DWORD	dwSkill_AutoMation_Time;
	int		dwSkill_AutoMation_Param;
	//钙矫付捞令
	DWORD	dwSkill_Maximize_Time;
	int		dwSkill_Maximize_Param;
	//乔瘤拿
	DWORD	dwSkill_PhysicalAbsorb_Time;
	int		dwSkill_PhysicalAbsorb_Param;
	//劳胶飘覆 蒋靛
	DWORD	dwSkill_ExtreamShield_Time;
	int		dwSkill_ExtreamShield_Param;

	//圈府 官叼
	DWORD	dwSkill_HolyBody_Time;
	int		dwSkill_HolyBody_Param;
	//圈府 闺矾
	DWORD	dwSkill_HolyValor_Time;
	int		dwSkill_HolyValor_Param;
	//圈府 府敲泛记
	DWORD	dwSkill_HolyReflection_Time;
	int		dwSkill_HolyReflection_Param;
	//牢镁飘 况迄
	DWORD	dwSkill_EnchantWeapon_Time;
	int		dwSkill_EnchantWeapon_Param;

	// 战神祝福
	DWORD	dwSkill_P_Enhence_Time;
	int		dwSkill_P_Enhence_Param;


	//皋呕酒赣
	DWORD	dwSkill_MetalArmor_Time;
	int		dwSkill_MetalArmor_Param;

	//胶颇农 蒋靛
	DWORD	dwSkill_SparkShield_Time;
	int		dwSkill_SparkShield_Param;

	//朴牧 矫府令
	DWORD	dwSKill_Falcon_Time;
	short	dwSKill_Falcon_Damage[2];

	//叼官牢 牢圈饭捞记
	DWORD	dwSkill_DivineInhalation_Time;
	DWORD	dwSkill_DivineInhalation_Param;

	//飘扼捞决橇 惯且扼
	DWORD	dwSkill_TriumphOfValhalla_Time;
	DWORD	dwSkill_TriumphOfValhalla_Param;

	//滚抿倔 扼捞橇
	DWORD	dwSkill_VirtualLife_Time;
	DWORD	dwSkill_VirtualLife_Param;

	//俊呈瘤蒋靛
	DWORD	dwSkill_EnergyShield_Time;
	DWORD	dwSkill_EnergyShield_Param;

	//灵魂
	DWORD	dwSkill_SpiritElemental_Time;
	DWORD	dwSkill_SpiritElemental_Param;

	//错教家靛
	DWORD	dwSkill_DancingSword_Time;
	DWORD	dwSkill_DancingSword_Param;
	DWORD	dwSkill_DancingSword_DelayTime;

	//神圣法阵
	DWORD	dwSkill_T_Anima_Time;
	DWORD	dwSkill_T_Anima_Param;

	//硅聪浆
	DWORD	dwVanishEndTime;
	short	saVanishParam[2];

	//硅聪浆
	DWORD	dwSkill_Compulsion_Time;
	DWORD	dwSkill_Compulsion_Param;

	//付弊匙平胶乔绢
	DWORD	dwSkill_MagneticSphere_Time;
	DWORD	dwSkill_MagneticSphere_Param;

	//滚辑目
	DWORD	dwSkill_Berserker_Time;
	DWORD	dwSkill_Berserker_Param;

	//众神之怒
	DWORD	dwSkill_B_Berserker_Time;
	DWORD	dwSkill_B_Berserker_Param;

	//绢技脚酒捞
	DWORD	dwSkill_AssassinEye_Time;
	DWORD	dwSkill_AssassinEye_Param;

	//焊弊
	DWORD	dwSkill_Vague_Time;
	DWORD	dwSkill_Vague_Param;

	//潜能激发
	DWORD	dwSkill_Amplified_Time;
	DWORD	dwSkill_Amplified_Param;

	//器胶坷宏匙捞媚
	DWORD	dwSkill_ForceOfNature_Time;
	WORD	wSkill_ForceOfNature_Param[2];

	//啊甸府 蒋靛
	DWORD	dwSkill_GodlyShied_Time;
	DWORD	dwSkill_GodlyShied_Param;

	//矮胶喉饭胶
	DWORD	dwSkill_GodsBless_Time;
	DWORD	dwSkill_GodsBless_Param;

	//亡灵之咒
	DWORD	dwSkill_Benedic_Time;

	//圈坷宏惯且扼
	DWORD	dwSkill_HallOfValhalla_Time;
	WORD	wSkill_HallOfValhalla_Param[2];

	//橇肺胶飘犁喉赴
	DWORD	dwSkill_FrostJavelin_Time;
	DWORD	dwSkill_FrostJavelin_Param;

	//府力呈凡鞘靛
	DWORD	dwSkill_RegenerationField_Time;

	//辑阁 公胶歧
	DWORD	dwSkill_SummonMuspell_Time;
	DWORD	dwSkill_SummonMuspell_Param;

	// 天女散花
	DWORD	dwSkill_Krishna_Time;
	DWORD	dwSkill_Krishna_Param;

	//致盲
	DWORD	dwSkill_Blind_Time;
	DWORD	dwSkill_Blind_Param;

	//迈克尔
	DWORD	dwSkill_Advent_Migal_Time;
	DWORD	dwSkill_Advent_Migal_Param;

	//祈雨师
	DWORD	dwSkill_Rainmaker_Time;
	DWORD	dwSkill_Rainmaker_Param;

	DWORD	dwCurse_Attack_Time;		//傍拜 历林
	DWORD	dwCurse_Attack_Param;		//傍拜 历林

	DWORD	dwCurse_Defence_Time;		//规绢 历林
	DWORD	dwCurse_Defence_Param;		//规绢 历林

	BYTE	bSkillPoint[SKILL_POINT_COLUM_MAX];

	DWORD	dwForceOrb_Code;			//器胶坷宏 酒捞袍 角青内靛
	DWORD	iForceOrbTime;			//器胶坷宏 蜡瘤矫埃
	DWORD	dwForceOrb_Damage;			//器胶坷宏 单固瘤
	DWORD	dwLastForceTime;

	DWORD	dwForceOrb_SaveCode;		//器胶坷宏 焙辑滚 历厘侩
	DWORD	dwForceOrb_SaveTime;		//器胶坷宏 焙辑滚 历厘侩
	DWORD	dwForceOrb_SaveDamage;		//器胶坷宏 焙辑滚 历厘侩
	DWORD	dwForceOrb_NextSetTime;		//器胶坷宏 荤侩沥焊 焊郴扁 抗距矫埃

	// 冠犁盔 - 何胶磐 酒捞袍(积疙仿)
	DWORD	dwLifeBooster_Code;			//何胶磐 酒捞袍(积疙仿) 角青内靛
	DWORD	dwLifeBooster_Time;			//何胶磐 酒捞袍(积疙仿) 蜡瘤矫埃
	DWORD	dwLifeBooster_Data;			//何胶磐 酒捞袍(积疙仿) 啊吝 欺季飘

	DWORD	dwLifeBooster_SaveCode;		//何胶磐 酒捞袍(积疙仿) 焙辑滚 历厘侩
	DWORD	dwLifeBooster_SaveTime;		//何胶磐 酒捞袍(积疙仿) 焙辑滚 历厘侩
	DWORD	dwLifeBooster_SaveData;		//何胶磐 酒捞袍(积疙仿) 焙辑滚 历厘侩 啊吝 欺季飘
	DWORD	dwLifeBooster_NextSetTime;	//何胶磐 酒捞袍(积疙仿) 荤侩沥焊 焊郴扁 抗距矫埃

	DWORD	dwManaBooster_Code;			//何胶磐 酒捞袍(扁仿) 角青内靛
	DWORD	dwManaBooster_Time;			//何胶磐 酒捞袍(扁仿) 蜡瘤矫埃
	DWORD	dwManaBooster_Data;			//何胶磐 酒捞袍(扁仿) 啊吝 欺季飘

	DWORD	dwManaBooster_SaveCode;		//何胶磐 酒捞袍(扁仿) 焙辑滚 历厘侩
	DWORD	dwManaBooster_SaveTime;		//何胶磐 酒捞袍(扁仿) 焙辑滚 历厘侩
	DWORD	dwManaBooster_SaveData;		//何胶磐 酒捞袍(扁仿) 焙辑滚 历厘侩 啊吝 欺季飘
	DWORD	dwManaBooster_NextSetTime;	//何胶磐 酒捞袍(扁仿) 荤侩沥焊 焊郴扁 抗距矫埃

	DWORD	dwStaminaBooster_Code;			//何胶磐 酒捞袍(辟仿) 角青内靛
	DWORD	dwStaminaBooster_Time;			//何胶磐 酒捞袍(辟仿) 蜡瘤矫埃
	DWORD	dwStaminaBooster_Data;			//何胶磐 酒捞袍(辟仿) 啊吝 欺季飘

	DWORD	dwStaminaBooster_SaveCode;		//何胶磐 酒捞袍(辟仿) 焙辑滚 历厘侩
	DWORD	dwStaminaBooster_SaveTime;		//何胶磐 酒捞袍(辟仿) 焙辑滚 历厘侩
	DWORD	dwStaminaBooster_SaveData;		//何胶磐 酒捞袍(辟仿) 焙辑滚 历厘侩 啊吝 欺季飘
	DWORD	dwStaminaBooster_NextSetTime;	//何胶磐 酒捞袍(辟仿) 荤侩沥焊 焊郴扁 抗距矫埃

	DWORD	dwPrimeItem_NextSetTime;
	DWORD	dwTime_PrimeItem_X2;
	DWORD	dwTime_PrimeItem_ExpUp;
	DWORD	dwPrimeItem_PackageCode;	//菩虐瘤酒捞袍 内靛

	DWORD	dwTime_PrimeItem_VampCuspid;
	DWORD	dwTime_PrimeItem_ManaRecharg;
	DWORD	dwTime_PrimeItem_MightofAwell;
	DWORD	dwTime_PrimeItem_MightofAwell2;
	DWORD	dwTime_PrimeItem_ManaReduce;
	DWORD	dwTime_PrimeItem_PhenixPet;
	DWORD	dwTime_PrimeItem_HelpPet;
	DWORD	dwTime_PrimeItem_VampCuspid_EX;
	DWORD	dwTime_PrimeItem_StaminaReduce;

	PacketItemPremiumData			sPremiumData;
	DWORD							dwTimeSync;
	DWORD							dwTimeSavePremium;
	PacketItemData					sTempItem;

	DWORD	dwPCBang_Pet_AttackTime;
	DWORD	dwPCBang_Pet_NextSetTime;

	DWORD	dwHelp_Pet_AttackTime;
	DWORD	dwHelp_Pet_NextSetTime;

	DWORD	dwSkillDelay_Code;
	DWORD	dwSkillDelay_Time;
	DWORD	dwSkillDelay_Data;

	DWORD	dwSkillDelay_SaveCode;
	DWORD	dwSkillDelay_SaveTime;
	DWORD	dwSkillDelay_SaveData;
	DWORD	dwSkillDelay_NextSetTime;

	DWORD	dwPrimeItem_FruitGame;
	DWORD	dwPrimeItem_FruitData;
	BYTE	bPrimeItem_Status[8];

	Unit	*lpLinkChar[SIN_MAX_SKILL_LIST];
	DWORD	dwLinkCharCode[SIN_MAX_SKILL_LIST];

	short	sBlessCastle_Damage[2];
	short	sBlessCastle_Param[2];
	DWORD	dwCheck_MasterClanTime;

	sCASTLE_MASTER	CastleMaster;
	DWORD	dwBlessSkill_Code;
	DWORD	dwBlessSkill_Time;
	DWORD	dwBlessSkill_Param;

	DWORD	dwSiegeItem_Scroll_Time;
	DWORD	dwSiegeItem_Scroll_Code;
	DWORD	dwSiegeItem_Scroll_Param;

	DWORD	dwSiegeItem_Stone1_Time;
	DWORD	dwSiegeItem_Stone1_Code;
	DWORD	dwSiegeItem_Stone1_Param;

	DWORD	dwSiegeItem_Stone2_Time;
	DWORD	dwSiegeItem_Stone2_Code;
	DWORD	dwSiegeItem_Stone2_Param;

	// 独角兽一家
	Unit	*dwCaravan_Hopy;
	DWORD	dwCaravan_SetNextTime;
	DWORD	dwCaravan_Hopy_Time;
	DWORD	dwCaravan_Param;
	// 凤凰蛋
	DWORD	dwTime_PhenixPet;
	DWORD	dwPhenixPet_SetNextTime;
	DWORD	PhenixPetType;
	DWORD	cdwTime_PhenixPet;
	DWORD	cphenixPetType;

	short	sCheckPlayField_Count[2];

	DWORD	dwHaQuestItemCount;

	// 大头
	DWORD	dwTime_BigHead;
	DWORD	dwBigHead_SetNextTime;
	DWORD	BigHeadType;
	DWORD	cdwTime_BigHead;
	DWORD	cBigHeadType;


	char	szUserExpTimeID[32];
	char	szUserExpTimeName[32];
	DWORD	dwExpGameTime;
	DWORD	dwExpGameTimeCheck;

	int		iPVPKills;
	int		iPVPDeaths;
	int		iPVPKillStreak;
	BOOL	bResetKillStreak;
	int		iKillSafe;
	int		iLastKillSafeID;
	DWORD	dwKillSafeTimeOut;
	DWORD	dwLastKillIP;

	UINT uIndex;
	BOOL bNetServer;
	BOOL bDisconnectNet;

	void Init(int uIndex);
	void Start(SocketData * sd) { bInUse = TRUE; pcSocketData = sd; }
	void Stop() { bInUse = FALSE; pcSocketData = NULL; bNetServer = FALSE; };
	BOOL IsInGame() { return iID != 0 ? TRUE : FALSE; }
	BOOL IsConnected() { return pcSocketData != 0 ? TRUE : FALSE; }
	ID GetID() { return iID; }
	EMapID GetMapID() { return iMapID; }
	EGameLevel GetGameLevel() { return iGameLevel; }
	void SetGameLevel(EGameLevel eLevel) { iGameLevel = eLevel; }
	BOOL CanSee(User * pcOtherUser)
	{
		//Other User cloaked? Then cannot see other user
		if (pcOtherUser->bCloak)
			return FALSE;

		//Not in one of the two Maps that the User can see?
		EMapID eOtherMapID = pcOtherUser->GetMapID();

		if (iMapID != eOtherMapID)
			return FALSE;

		//Other User in Quest Arena?
		if (pcOtherUser->GetMapID() == MAPID_QuestArena)
		{
			//Not a GM? Then cannot see other User
			if (GetGameLevel() == GAMELEVEL_None)
				return FALSE;
		}

		return TRUE;
	}
	BOOL CanSee(Unit *pcOtherUnit);
	int	GetGold() { return iInventoryGold; };
};


#define	CHAR_EVENT_STARPOINT		300

#define	ITEM_UNIQUE_CODE_NORMAL		1
#define	ITEM_UNIQUE_CODE_QUEST		2


#define BIMASK_PRORATE_USER			1
#define BIMASK_FREE_USER			2
#define BIMASK_VIP_USER				4
#define BIMASK_BIRTHDAY_USER		8
#define BIMASK_TIMELEVEL_USER		16
#define BIMASK_ADULT_USER			32


#define	MONSTER_CLASS_NORMAL		0
#define	MONSTER_CLASS_BOSS			1
#define	MONSTER_CLASS_HAMMER		200
#define	MONSTER_CLASS_GHOST			300

#endif